# -*- coding: utf-8 -*-
"""Data augmentation

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xFz-xSyNbWNVeLArDoGkvuzQOdTsLbDV
"""

from google.colab import drive
drive.mount('/content/drive')

import os
from tensorflow.keras.preprocessing.image import ImageDataGenerator, load_img, img_to_array, array_to_img
from PIL import Image, ImageOps
import numpy as np

# Percorsi
original_dir = '/content/drive/MyDrive/train_ia/original_images'
augmented_dir = '/content/drive/MyDrive/train_ia/augmented_images'
os.makedirs(augmented_dir, exist_ok=True)

# Generatore
datagen = ImageDataGenerator(
    rotation_range=6,
    zoom_range=0.1,
    width_shift_range=0.05,
    height_shift_range=0.05,
    shear_range=0.05,
    brightness_range=[0.8, 1.2],
    fill_mode='nearest'
)

num_augmented_images = 10
CROP_PIXELS = 20
PADDING_PIXELS = 30

def add_padding(pil_img, padding_px, color=(127, 127, 127)):
    return ImageOps.expand(pil_img, border=padding_px, fill=color)

def crop_image(pil_img, crop_px):
    width, height = pil_img.size
    return pil_img.crop((crop_px, crop_px, width - crop_px, height - crop_px))

for filename in os.listdir(original_dir):
    if filename.lower().endswith(('.jpg', '.jpeg', '.png')):
        img_path = os.path.join(original_dir, filename)
        img = load_img(img_path)


        padded = add_padding(img, PADDING_PIXELS)

        x = img_to_array(padded)
        x = x.reshape((1,) + x.shape)

        i = 0
        for batch in datagen.flow(x, batch_size=1):
            augmented = array_to_img(batch[0])


            cropped = crop_image(augmented, PADDING_PIXELS)

            new_filename = f"{os.path.splitext(filename)[0]}_aug{i}.jpg"
            cropped.save(os.path.join(augmented_dir, new_filename))

            i += 1
            if i >= num_augmented_images:
                break